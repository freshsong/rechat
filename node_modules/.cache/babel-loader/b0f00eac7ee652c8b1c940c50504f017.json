{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/reactchat/src/pages/ChatLobby.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useAuthValue } from '../context/AuthProvider';\nimport { db, auth } from '../config/firebase';\nimport { addDoc, collection, query, orderBy, onSnapshot, where, deleteDoc, getDocs, serverTimestamp } from 'firebase/firestore';\nimport { signOut, getAuth } from 'firebase/auth';\nconst ChatLobby = () => {\n  const [roomname, setRoomname] = useState(\"\");\n  const [roomList, setRoomList] = useState([]);\n  const {\n    nick,\n    userIcon,\n    email\n  } = useAuthValue();\n  const nav = useNavigate();\n  const user = auth.currentUser(); //로그인한 사용자 정보\n\n  const logout = () => {\n    signOut(auth).then(() => {\n      nav(\"/login\");\n    }).catch(err => console.error('로그아웃하다가 삑사리', err));\n  };\n  /*\r\n    //방장 이름이 null값인 경우 채팅방 삭제\r\n    const handleDeleRoom = async() => {\r\n      try{\r\n        const dbref = collection(db, \"chatroom\");\r\n        //master값이 null일경우\r\n        const sql = query(dbref, where(\"master\", \"==\", null));\r\n        const querySnapshot = await getDocs(sql);\r\n        QuerySnapshot.forEach(async (doc) => {\r\n           await deleteDoc(doc.ref); //루프를 돌며 master가 null인 채팅룸 삭제\r\n        });\r\n      }catch(error){\r\n        console.error(\"에러가 발생했습니다.\", error);\r\n      }\r\n    }\r\n  */\n\n  //db의 chatroom에서 읽기\n  const getRoom = () => {\n    const sql = query(collection(db, 'chatroom'), orderBy(\"timestamp\", \"desc\"));\n    onSnapshot(sql, res => {\n      const rooms = res.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setRoomList(rooms);\n    });\n  };\n  useEffect(() => {\n    handleDeleRoom();\n    getRoom();\n  }, []);\n\n  //db의 chatroom이라는 테이블에 쓰기\n  const handleMakeRoom = async e => {\n    e.preventDefault();\n    const dbref = collection(db, 'chatroom');\n    await addDoc(dbref, {\n      timestamp: serverTimestamp(),\n      title: roomname,\n      master: nick,\n      email\n    });\n    setRoomname(\"\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header text-center mt-5 pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: userIcon,\n    alt: nick,\n    className: \"usericon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 45\n    }\n  }, nick), \"\\uB2D8 \\uD658\\uC601\\uD569\\uB2C8\\uB2E4.\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: logout,\n    className: \"btn btn-warning mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }\n  }, \"\\uB85C\\uADF8\\uC544\\uC6C3\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"makechat my-5\",\n    method: \"post\",\n    onSubmit: handleMakeRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }\n  }, \"\\uCC44\\uD305\\uBC29\\uAC1C\\uC124\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\uCC44\\uD305\\uB8F8\\uC774\\uB984\\uC744 \\uC4F0\\uC138\\uC694\",\n    name: \"roomname\",\n    value: roomname,\n    onChange: e => setRoomname(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }\n  }, \"\\uCC44\\uD305\\uBC29\\uB9CC\\uB4E4\\uAE30\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }\n  }, roomList && roomList.map((rs, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatroom col-3\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/chat/${rs.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 24\n    }\n  }, rs.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 24\n    }\n  }, \"(\\uBC29\\uC7A5 : \", rs.master, \"\\uB2D8)\")))));\n};\nexport default ChatLobby;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","useAuthValue","db","auth","addDoc","collection","query","orderBy","onSnapshot","where","deleteDoc","getDocs","serverTimestamp","signOut","getAuth","ChatLobby","roomname","setRoomname","roomList","setRoomList","nick","userIcon","email","nav","user","currentUser","logout","then","catch","err","console","error","getRoom","sql","res","rooms","docs","map","doc","id","data","handleDeleRoom","handleMakeRoom","e","preventDefault","dbref","timestamp","title","master","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","onClick","method","onSubmit","placeholder","name","value","onChange","target","rs","index","key","to"],"sources":["/Users/apple/Desktop/reactchat/src/pages/ChatLobby.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useNavigate, Link} from 'react-router-dom'\r\nimport { useAuthValue } from '../context/AuthProvider'\r\nimport { db, auth } from '../config/firebase'\r\nimport { addDoc, \r\n         collection, \r\n         query, \r\n         orderBy, \r\n         onSnapshot, \r\n         where,\r\n         deleteDoc,\r\n         getDocs,\r\n         serverTimestamp } from 'firebase/firestore';\r\nimport { signOut, getAuth } from 'firebase/auth'\r\n\r\nconst ChatLobby = () => {\r\n  const [roomname, setRoomname] = useState(\"\");\r\n  const [roomList, setRoomList] = useState([]);\r\n  const { nick, userIcon, email } = useAuthValue();\r\n  const nav = useNavigate();\r\n  const user = auth.currentUser(); //로그인한 사용자 정보\r\n\r\n  const logout = () => {\r\n     signOut(auth)\r\n       .then(()=>{\r\n          nav(\"/login\");\r\n       })\r\n       .catch((err) => console.error('로그아웃하다가 삑사리', err));\r\n  }\r\n/*\r\n  //방장 이름이 null값인 경우 채팅방 삭제\r\n  const handleDeleRoom = async() => {\r\n    try{\r\n      const dbref = collection(db, \"chatroom\");\r\n      //master값이 null일경우\r\n      const sql = query(dbref, where(\"master\", \"==\", null));\r\n      const querySnapshot = await getDocs(sql);\r\n      QuerySnapshot.forEach(async (doc) => {\r\n         await deleteDoc(doc.ref); //루프를 돌며 master가 null인 채팅룸 삭제\r\n      });\r\n    }catch(error){\r\n      console.error(\"에러가 발생했습니다.\", error);\r\n    }\r\n  }\r\n*/\r\n\r\n  //db의 chatroom에서 읽기\r\n  const getRoom = () => {\r\n     const sql = query(collection(db, 'chatroom'), orderBy(\"timestamp\", \"desc\"));\r\n     onSnapshot(sql, (res) => {\r\n        const rooms =res.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }));\r\n        setRoomList(rooms);\r\n     });\r\n  }\r\n  useEffect(()=>{\r\n     handleDeleRoom();\r\n     getRoom();\r\n  }, []);\r\n\r\n  //db의 chatroom이라는 테이블에 쓰기\r\n  const handleMakeRoom = async (e) => {\r\n     e.preventDefault();\r\n     const dbref = collection(db, 'chatroom');\r\n        await addDoc(dbref, {\r\n           timestamp: serverTimestamp(),\r\n           title: roomname,\r\n           master: nick,\r\n           email\r\n        });\r\n        setRoomname(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n       <div className=\"header text-center mt-5 pt-3\">\r\n           <img src={userIcon} alt={nick} className=\"usericon\"/>\r\n           <h3 className=\"text-center mt-4\"><strong>{nick}</strong>님 환영합니다.</h3>\r\n           <button type=\"button\" onClick={logout} className=\"btn btn-warning mt-3\">로그아웃</button>\r\n       </div>\r\n       <form className=\"makechat my-5\" method=\"post\" onSubmit={handleMakeRoom}>\r\n           <h2 className=\"text-center\">채팅방개설</h2>\r\n           <input \r\n               type=\"text\"\r\n               placeholder=\"채팅룸이름을 쓰세요\"\r\n               name=\"roomname\"\r\n               value={roomname}\r\n               onChange={(e)=>setRoomname(e.target.value)}\r\n           />\r\n           <button type=\"submit\"\r\n                   className=\"btn btn-primary\"\r\n            >채팅방만들기</button>           \r\n       </form>\r\n       <div className=\"row\">\r\n           {\r\n              (roomList) && \r\n                 roomList.map((rs, index)=>(\r\n                    <div className=\"chatroom col-3\" key={index}>\r\n                       <Link to={`/chat/${rs.id}`}>{rs.title}</Link>\r\n                       <p>(방장 : {rs.master}님)</p>\r\n                    </div>  \r\n                 ))\r\n           }\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatLobby"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}