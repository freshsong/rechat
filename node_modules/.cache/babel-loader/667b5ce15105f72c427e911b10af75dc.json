{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/reactchat/src/pages/ChatRoom.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { query, updateDoc, getDocs, addDoc, collection, where, doc, increment } from 'firebase/firestore';\nimport { db } from '../config/firebase';\nimport { getAuth } from 'firebase/auth';\nimport ChatHeader from '../component/ChatHeader';\nimport MessageInput from '../component/MessageInput';\nimport Messages from '../component/Messages';\nimport Sidebar from '../component/Sidebar';\nconst ChatRoom = () => {\n  const {\n    id: roomId\n  } = useParams();\n  const auth = getAuth();\n  const [user, setUser] = useState(auth.currentUser);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(setUser);\n    return () => unsubscribe();\n  }, [auth]);\n  const enterChatRoom = async () => {\n    if (!roomId || !user) return;\n    const qry = query(collection(db, \"mchat\"), where(\"roomId\", \"==\", roomId), where(\"userId\", \"==\", user.uid));\n    const snapshot = await getDocs(qry);\n    if (snapshot.empty) {\n      //이미 정보가 등록되지 않은 경우에만 업데이트\n      //chatroom에 회원수 1증가\n      const roomRef = doc(db, 'chatroom', roomId);\n      await updateDoc(roomRef, {\n        memcount: increment(1)\n      });\n\n      //mchat에 대화방 참가자 추가\n      const mchatRef = collection(db, 'mchat');\n      await addDoc(mchatRef, {\n        userid: user.uid,\n        roomId: roomId,\n        nick: user.displayName,\n        email: user.email,\n        uicon: user.photoURL\n      });\n\n      //채팅방 입장\n      const chatsRef = collection(db, 'chats');\n      await addDoc(chatsRef, {\n        roomId: roomId,\n        message: `${user.displayName}님이 입장하셨습니다.`,\n        timestamp: new Date()\n      });\n    }\n  };\n  useEffect(() => {\n    enterChatRoom();\n  }, [roomId, user, enterChatRoom]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3 position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    roomId: roomId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChatHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MessageInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default ChatRoom;","map":{"version":3,"names":["React","useState","useEffect","useParams","query","updateDoc","getDocs","addDoc","collection","where","doc","increment","db","getAuth","ChatHeader","MessageInput","Messages","Sidebar","ChatRoom","id","roomId","auth","user","setUser","currentUser","unsubscribe","onAuthStateChanged","enterChatRoom","qry","uid","snapshot","empty","roomRef","memcount","mchatRef","userid","nick","displayName","email","uicon","photoURL","chatsRef","message","timestamp","Date","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/apple/Desktop/reactchat/src/pages/ChatRoom.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { query, updateDoc, getDocs, addDoc,collection, where, doc, increment } from 'firebase/firestore'\r\nimport { db } from '../config/firebase'\r\nimport { getAuth } from 'firebase/auth'\r\n\r\nimport ChatHeader  from '../component/ChatHeader'\r\nimport MessageInput from '../component/MessageInput'\r\nimport Messages from '../component/Messages'\r\nimport Sidebar from '../component/Sidebar'\r\n\r\nconst ChatRoom = () => {\r\n  const { id:roomId } = useParams();\r\n  const auth = getAuth();\r\n  const [user, setUser] = useState(auth.currentUser);\r\n\r\n  useEffect(()=>{\r\n    const unsubscribe = auth.onAuthStateChanged(setUser);\r\n    return ()=>unsubscribe();\r\n  }, [auth]);\r\n\r\n  const enterChatRoom = async() => {\r\n     if(!roomId || !user) return;\r\n     const qry = query(\r\n                   collection(db, \"mchat\"), \r\n                   where(\"roomId\", \"==\", roomId),\r\n                   where(\"userId\", \"==\", user.uid));\r\n     const snapshot = await getDocs(qry);               \r\n    \r\n     if(snapshot.empty){ //이미 정보가 등록되지 않은 경우에만 업데이트\r\n       //chatroom에 회원수 1증가\r\n       const roomRef = doc(db, 'chatroom', roomId);\r\n       await updateDoc(roomRef, {\r\n           memcount: increment(1)\r\n       });\r\n\r\n       //mchat에 대화방 참가자 추가\r\n       const mchatRef = collection(db, 'mchat');\r\n       await addDoc(mchatRef, {\r\n          userid: user.uid,\r\n          roomId: roomId,\r\n          nick: user.displayName,\r\n          email: user.email,\r\n          uicon: user.photoURL\r\n       })\r\n\r\n       //채팅방 입장\r\n       const chatsRef = collection(db, 'chats');\r\n       await addDoc(chatsRef, {\r\n           roomId: roomId,\r\n           message: `${user.displayName}님이 입장하셨습니다.`,\r\n           timestamp: new Date()\r\n       })\r\n     }              \r\n  }\r\n  \r\n  useEffect(()=>{\r\n     enterChatRoom();\r\n  }, [roomId, user, enterChatRoom]);\r\n\r\n  return (\r\n    <div className=\"container bg-light\">\r\n       <div className=\"row mt-5 mb-3\">\r\n          <div className=\"col-3 position-relative\">\r\n            <Sidebar roomId={roomId} />\r\n          </div>\r\n          <div className=\"col-9\">\r\n            <ChatHeader />\r\n            <Messages />\r\n            <MessageInput />\r\n          </div>\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatRoom"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,KAAK,EAAEC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAACC,UAAU,EAAEC,KAAK,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACxG,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SAASC,OAAO,QAAQ,eAAe;AAEvC,OAAOC,UAAU,MAAO,yBAAyB;AACjD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAM;IAAEC,EAAE,EAACC;EAAO,CAAC,GAAGjB,SAAS,CAAC,CAAC;EACjC,MAAMkB,IAAI,GAAGR,OAAO,CAAC,CAAC;EACtB,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAACoB,IAAI,CAACG,WAAW,CAAC;EAElDtB,SAAS,CAAC,MAAI;IACZ,MAAMuB,WAAW,GAAGJ,IAAI,CAACK,kBAAkB,CAACH,OAAO,CAAC;IACpD,OAAO,MAAIE,WAAW,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAW;IAC9B,IAAG,CAACP,MAAM,IAAI,CAACE,IAAI,EAAE;IACrB,MAAMM,GAAG,GAAGxB,KAAK,CACHI,UAAU,CAACI,EAAE,EAAE,OAAO,CAAC,EACvBH,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEW,MAAM,CAAC,EAC7BX,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEa,IAAI,CAACO,GAAG,CAAC,CAAC;IAC9C,MAAMC,QAAQ,GAAG,MAAMxB,OAAO,CAACsB,GAAG,CAAC;IAEnC,IAAGE,QAAQ,CAACC,KAAK,EAAC;MAAE;MAClB;MACA,MAAMC,OAAO,GAAGtB,GAAG,CAACE,EAAE,EAAE,UAAU,EAAEQ,MAAM,CAAC;MAC3C,MAAMf,SAAS,CAAC2B,OAAO,EAAE;QACrBC,QAAQ,EAAEtB,SAAS,CAAC,CAAC;MACzB,CAAC,CAAC;;MAEF;MACA,MAAMuB,QAAQ,GAAG1B,UAAU,CAACI,EAAE,EAAE,OAAO,CAAC;MACxC,MAAML,MAAM,CAAC2B,QAAQ,EAAE;QACpBC,MAAM,EAAEb,IAAI,CAACO,GAAG;QAChBT,MAAM,EAAEA,MAAM;QACdgB,IAAI,EAAEd,IAAI,CAACe,WAAW;QACtBC,KAAK,EAAEhB,IAAI,CAACgB,KAAK;QACjBC,KAAK,EAAEjB,IAAI,CAACkB;MACf,CAAC,CAAC;;MAEF;MACA,MAAMC,QAAQ,GAAGjC,UAAU,CAACI,EAAE,EAAE,OAAO,CAAC;MACxC,MAAML,MAAM,CAACkC,QAAQ,EAAE;QACnBrB,MAAM,EAAEA,MAAM;QACdsB,OAAO,EAAE,GAAGpB,IAAI,CAACe,WAAW,aAAa;QACzCM,SAAS,EAAE,IAAIC,IAAI,CAAC;MACxB,CAAC,CAAC;IACJ;EACH,CAAC;EAED1C,SAAS,CAAC,MAAI;IACXyB,aAAa,CAAC,CAAC;EAClB,CAAC,EAAE,CAACP,MAAM,EAAEE,IAAI,EAAEK,aAAa,CAAC,CAAC;EAEjC,oBACE3B,KAAA,CAAA6C,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCpD,KAAA,CAAA6C,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BpD,KAAA,CAAA6C,aAAA;IAAKC,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtCpD,KAAA,CAAA6C,aAAA,CAAC5B,OAAO;IAACG,MAAM,EAAEA,MAAO;IAAA2B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvB,CAAC,eACNpD,KAAA,CAAA6C,aAAA;IAAKC,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpBpD,KAAA,CAAA6C,aAAA,CAAC/B,UAAU;IAAAiC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACdpD,KAAA,CAAA6C,aAAA,CAAC7B,QAAQ;IAAA+B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACZpD,KAAA,CAAA6C,aAAA,CAAC9B,YAAY;IAAAgC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACZ,CACH,CACH,CAAC;AAEV,CAAC;AAED,eAAelC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}